# Syntax Rules
EXPRESSION              <- TERNARY
TERNARY                 <- CONDITION ('?' EXPRESSION ':' EXPRESSION)?
CONDITION               <- MULTIPLICATIVE (ConditionOperator MULTIPLICATIVE)?
MULTIPLICATIVE          <- CALL (MultiplicativeOperator CALL)*
CALL                    <- PRIMARY (EXPRESSION)?
PRIMARY                 <- FOR / Identifier / '(' EXPRESSION ')' / String / Number
FOR                     <- 'for' Identifier 'from' Number 'to' Number EXPRESSION

# Token Rules
ConditionOperator       <- '=='
MultiplicativeOperator  <- '%'
Identifier              <- !Keyword < [a-zA-Z][a-zA-Z0-9_]* >
String                  <- "'" < ([^'] .)* > "'"
Number                  <- < [0-9]+ >

Keyword                 <- 'for' / 'from' / 'to'
%whitespace             <- [ \t\r\n]*
